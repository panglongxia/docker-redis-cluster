version: "3.6"
services:
  redis-master1:
     image: redis-cluster #使用的镜像
     container_name: redis-master1 #容器名
     working_dir: /config
     environment: #设置环境变量
       - PORT=6391
     ports: # 端口映射
       - "6391:6391"
       - "16391:16391"
     stdin_open: true
     networks: #网络
        redis-master:
          ipv4_address: 172.50.0.2
     tty: true
     privileged: true #允许容器高权限操作
     volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"] #共享目录
     entrypoint: #启动后执行的命令
       - /bin/bash
       - redis.sh
  redis-master2:
       image: redis-cluster
       working_dir: /config
       container_name: redis-master2
       environment:
              - PORT=6392
       networks:
          redis-master:
             ipv4_address: 172.50.0.3
       ports:
         - "6392:6392"
         - "16392:16392"
       stdin_open: true
       tty: true
       privileged: true
       volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"]
       entrypoint:
         - /bin/bash
         - redis.sh
  redis-master3:
       image: redis-cluster
       container_name: redis-master3
       working_dir: /config #工作目录
       environment:
              - PORT=6393
       networks:
          redis-master:
            ipv4_address: 172.50.0.4
       ports:
         - "6393:6393"
         - "16393:16393"
       stdin_open: true
       tty: true
       privileged: true
       volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"]
       entrypoint:
         - /bin/bash
         - redis.sh
  redis-slave1:
       image: redis-cluster
       container_name: redis-slave1
       working_dir: /config
       environment:
            - PORT=6394
       networks:
          redis-slave:
             ipv4_address: 172.30.0.2
       ports:
         - "6394:6394"
         - "16394:16394"
       stdin_open: true
       tty: true
       privileged: true
       volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"]
       entrypoint:
         - /bin/bash
         - redis.sh
  redis-salve2:
       image: redis-cluster
       working_dir: /config
       container_name: redis-slave2
       environment:
             - PORT=6395
       ports:
         - "6395:6395"
         - "16395:16395"
       stdin_open: true
       networks:
          redis-slave:
              ipv4_address: 172.30.0.3
       tty: true
       privileged: true
       volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"]
       entrypoint:
         - /bin/bash
         - redis.sh
  redis-salve3:
       image: redis-cluster
       container_name: redis-slave3
       working_dir: /config
       environment:
          - PORT=6396
       ports:
         - "6396:6396"
         - "16396:16396"
       stdin_open: true
       networks:
          redis-slave:
            ipv4_address: 172.30.0.4
       tty: true
       privileged: true
       volumes: ["/wwwdata/software/dockerlearn/redis-cluster-test/config:/config"]
       entrypoint:
         - /bin/bash
         - redis.sh
networks:
  redis-master: #网段名
     driver: bridge #连接方式
     ipam:
       driver: default #ip
       config:
          -
           subnet: 172.50.0.0/16 #定义网段
  redis-slave:
       driver: bridge
       ipam:
         driver: default
         config:
            -
             subnet: 172.30.0.0/16
  redis-test: #使用外部网络
     external:
       name: mynetwork